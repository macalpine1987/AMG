plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.0'
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

gradle.startParameter.continueOnFailure = true
javadoc.options.encoding = 'UTF-8'
group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.codeborne:selenide:6.10.0'
    implementation 'com.codeborne:selenide-testng:6.10.0'
    implementation 'io.qameta.allure:allure-selenide:2.20.1'
    implementation 'io.qameta.allure:allure-testng:2.20.1'
    implementation 'ch.qos.logback:logback-core:1.3.4'
    implementation 'ch.qos.logback:logback-classic:1.3.4'
    implementation 'org.json:json:20220924'
    implementation 'io.rest-assured:rest-assured-common:4.4.0'
    implementation 'io.rest-assured:spring-commons:4.4.0'
    testImplementation 'io.rest-assured:rest-assured:4.4.0'
}

test {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }

    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}


task restAuthOvd (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesOVD/RestAuthOvd.xml'
    }

    if (project.hasProperty('stand')) {
        systemProperty("RestAssured.baseUrl", stand)
    } else {
        systemProperty("RestAssured.baseUrl", "http://10.100.20.207")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task authOVD (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesOVD/ovd_all.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.207")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task groupAdm1 (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesOVD/adm1.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.207")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task groupBez1 (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesOVD/bez1.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.207")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task groupRuk1 (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesOVD/ruk1.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.207")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task groupSotr1 (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesOVD/sotr1.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.207")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task restAuthSodp (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesSODP/RestAuthSodp.xml'
    }

    if (project.hasProperty('stand')) {
        systemProperty("RestAssured.baseUrl", stand)
    } else {
        systemProperty("RestAssured.baseUrl", "http://10.100.20.133")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task authSODP (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesSODP/sodp_auth_all.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.133")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task groupSODP_0 (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesSODP/sodp_0.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.133")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task groupSODP_admin (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesSODP/sodp_admin.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.133")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task groupSODP_CA (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesSODP/sodp_ca.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.133")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task groupSODP_OGR (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesSODP/sodp_ogr.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.133")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task groupSODP_REG1 (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesSODP/sodp_reg1.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.133")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task SODP_smoke (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesSODP/sodp_smoke.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.7")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task authSOMPP (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesSOMPP/sompp_all.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.25")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task groupSOMPP_0 (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesSOMPP/sompp_0.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.25")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task groupSOMPP_admin (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesSOMPP/sompp_admin.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.25")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task groupSOMPP_CA (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesSOMPP/sompp_ca.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.25")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}

task groupSOMPP_REG1 (type: Test) {
    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true
        ignoreFailures = true
        suites 'src/test/resources/suitesSOMPP/sompp_reg1.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("selenide.browser", browser)
    }
    if (project.hasProperty('remote')) {
        systemProperty("selenide.remote", remote)
    }
    if (project.hasProperty('stand')) {
        systemProperty("selenide.baseUrl", stand)
    } else {
        systemProperty("selenide.baseUrl", "http://10.100.20.25")

    }
    testLogging { events "PASSED", "FAILED", "SKIPPED" }
    testLogging.showStandardStreams = true
}
